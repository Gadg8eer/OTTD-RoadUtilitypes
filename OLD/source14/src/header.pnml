/*
 * This file is aimed to provide an example on how to code roadtypes and tramtypes in NML.
 * To keep the code readable, not every property or variable is documented in
 * detail, refer to the object-specific reference in the documentation.
 */

/**********************************************
 * Header, containing some general stuff:
 **********************************************/

 /*
 * First, define a grf block. This defines some basic properties of the grf,
 * which are required for the grf to be valid and loadable.
 */
grf {
    /* This grf is part of NML, therefore "NML" is chosen as the first three
     * characters of the GRFID. It is the fifth real grf defined as part of
     * NML, therefore the last character is set to 4. Successive grfs will
     * have 5, 6, etc. there, to make sure each example grf has a unique GRFID.
     */
    grfid : "G8R\02";
    name : string(STR_GRF_NAME);
    desc : string(STR_GRF_DESCRIPTION);
    version : 10; // must be numeric
    min_compatible_version : 10;
	param 0 {
		param_commercial_carriers {
			type: bool;
			name: string(STR_PARAM_COMMERCIAL_CARRIERS);
                        desc: string(STR_PARAM_COMMERCIAL_CARRIERS_DESC);
			def_value: 0;
		}
	}
    param 1 {
        param_purchase_cost {
            type:   int;
            min_value: 0;
            max_value: 2;
            def_value: 0;
            name:   string(STR_PARAM_NAME_PURCHASE_COST_UTIL);
            desc:   string(STR_PARAM_DESC_PURCHASE_COST_UTIL);
            names: {
                        0: string(STR_PARAM_COST_UTIL_H);
                        1: string(STR_PARAM_COST_UTIL_N);
                        2: string(STR_PARAM_COST_UTIL_D);
            };
        }
    }
    param 2 {
        param_running_cost {
            type:   int;
            min_value: 0;
            max_value: 2;
            def_value: 0;
            name:   string(STR_PARAM_NAME_RUNNING_COST_UTIL);
            desc:   string(STR_PARAM_DESC_RUNNING_COST_UTIL);
            names: {
                        0: string(STR_PARAM_COST_UTIL_H);
                        1: string(STR_PARAM_COST_UTIL_N);
                        2: string(STR_PARAM_COST_UTIL_D);
            };
        }
    }
//	param 3 {
//		param_capacities {
//			name: string(STR_CAPACITY_PARAM_NAME);
//			desc: string(STR_CAPACITY_PARAM_DESC);
//			min_value: 0;
//			max_value: 1;
//			def_value: 1;
//			names: {
//				0: string(STR_CAPACITY_PARAM_SEATED);
//				1: string(STR_CAPACITY_PARAM_STANDING);
//			};
//		}
//	}
//	param 4 {
//		param_RV0_or_tram1 {
//			name: string(STR_TRAM_PARAM_NAME);
//			desc: string(STR_TRAM_PARAM_DESC);
//			min_value: 0;
//			max_value: 1;
//			def_value: 0;
//			names: {
//				0: string(STR_ROADVEHICLES);
//				1: string(STR_TRAMS);
//			};
//		}
//	}
//}