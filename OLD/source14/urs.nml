# 1 "urs.pnml"
# 1 "src/header.pnml" 1
/*
 * This file is aimed to provide an example on how to code roadtypes and tramtypes in NML.
 * To keep the code readable, not every property or variable is documented in
 * detail, refer to the object-specific reference in the documentation.
 */

/**********************************************
 * Header, containing some general stuff:
 **********************************************/

 /*
 * First, define a grf block. This defines some basic properties of the grf,
 * which are required for the grf to be valid and loadable.
 */
grf {
    /* This grf is part of NML, therefore "NML" is chosen as the first three
     * characters of the GRFID. It is the fifth real grf defined as part of
     * NML, therefore the last character is set to 4. Successive grfs will
     * have 5, 6, etc. there, to make sure each example grf has a unique GRFID.
     */
    grfid : "G8R\02";
    name : string(STR_GRF_NAME);
    desc : string(STR_GRF_DESCRIPTION);
    version : 10; // must be numeric
    min_compatible_version : 10;
	param 0 {
		param_commercial_carriers {
			type: bool;
			name: string(STR_PARAM_COMMERCIAL_CARRIERS);
                        desc: string(STR_PARAM_COMMERCIAL_CARRIERS_DESC);
			def_value: 0;
		}
	}
    param 1 {
        param_purchase_cost {
            type:   int;
            min_value: 0;
            max_value: 2;
            def_value: 0;
            name:   string(STR_PARAM_NAME_PURCHASE_COST_UTIL);
            desc:   string(STR_PARAM_DESC_PURCHASE_COST_UTIL);
            names: {
                        0: string(STR_PARAM_COST_UTIL_H);
                        1: string(STR_PARAM_COST_UTIL_N);
                        2: string(STR_PARAM_COST_UTIL_D);
            };
        }
    }
    param 2 {
        param_running_cost {
            type:   int;
            min_value: 0;
            max_value: 2;
            def_value: 0;
            name:   string(STR_PARAM_NAME_RUNNING_COST_UTIL);
            desc:   string(STR_PARAM_DESC_RUNNING_COST_UTIL);
            names: {
                        0: string(STR_PARAM_COST_UTIL_H);
                        1: string(STR_PARAM_COST_UTIL_N);
                        2: string(STR_PARAM_COST_UTIL_D);
            };
        }
    }
//	param 3 {
//		param_capacities {
//			name: string(STR_CAPACITY_PARAM_NAME);
//			desc: string(STR_CAPACITY_PARAM_DESC);
//			min_value: 0;
//			max_value: 1;
//			def_value: 1;
//			names: {
//				0: string(STR_CAPACITY_PARAM_SEATED);
//				1: string(STR_CAPACITY_PARAM_STANDING);
//			};
//		}
//	}
//	param 4 {
//		param_RV0_or_tram1 {
//			name: string(STR_TRAM_PARAM_NAME);
//			desc: string(STR_TRAM_PARAM_DESC);
//			min_value: 0;
//			max_value: 1;
//			def_value: 0;
//			names: {
//				0: string(STR_ROADVEHICLES);
//				1: string(STR_TRAMS);
//			};
//		}
//	}
}
# 1 "urs.pnml" 1
//#include "src/roadtypes.pnml"

# 1 "src/template/template_ground.pnml" 1

/* Default ground tile template (re-use as needed) */
template ground_tile(x, y) { [x, y, 64, 31, -31, 0] }
# 1 "urs.pnml" 1
# 1 "src/template/template_roadunderlay.pnml" 1

/**********************************************
 * Road underlays (tracks + ballast):
 **********************************************/
/* Template for underlays; 2x straight road, 5x junctions, 4x corners, 4x slope, 4x half-tile road */

/* Used for bridge surfaces also, therefore the template is split */
template tmpl_underlay_straight() {
    ground_tile( 0, 0)
    ground_tile(75, 0)
}
template tmpl_underlay_junctions() {
    ground_tile(150, 0)
    ground_tile(225, 0)
    ground_tile(300, 0)
    ground_tile(375, 0)
    ground_tile(450, 0)
}
template tmpl_underlay_corners() {
    ground_tile(  0, 40)
    ground_tile( 75, 40)
    ground_tile(150, 40)
    ground_tile(225, 40)
}
template tmpl_underlay_slope() {
    [300, 40, 64, 39, -31, -8]
    [375, 40, 64, 23, -31, 0]
    [450, 40, 64, 23, -31, 0]
    [525, 40, 64, 39, -31, -8]
}
template tmpl_underlay_half_tiles() {
    ground_tile(  0, 80)
    ground_tile( 75, 80)
    ground_tile(150, 80)
    ground_tile(225, 80)
}
template tmpl_underlay_roadtypes() {
    tmpl_underlay_straight()
    tmpl_underlay_junctions()
    tmpl_underlay_corners()
    tmpl_underlay_slope()
    tmpl_underlay_half_tiles()
}

/* Spriteset containing all underlays */
spriteset(track_underlays, "gfx/template/roads_underlay.png") {
    tmpl_underlay_roadtypes()
}
/* Spriteset containing all underlays */
spriteset(road_underlays, "gfx/roads/XXXX_BASE/roads_underlay.png") {
    tmpl_underlay_roadtypes()
}
# 1 "urs.pnml" 1
# 1 "src/template/template_trackoverlay.pnml" 1

/**********************************************
 * Track overlays (tracks without ballast):
 **********************************************/
template tmpl_overlay_roadtypes() {
    [ 0, 0, 64, 31, -31, 0]
    [75, 0, 64, 31, -31, 0]

    [150, 0, 64, 31, -31, 0]
    [225, 0, 64, 31, -31, 0]
    [300, 0, 64, 31, -31, 0]
    [375, 0, 64, 31, -31, 0]
    [450, 0, 64, 31, -31, 0]

    [  0, 40, 64, 31, -31, 0]
    [ 75, 40, 64, 31, -31, 0]
    [150, 40, 64, 31, -31, 0]
    [225, 40, 64, 31, -31, 0]

    [300, 40, 64, 39, -31, -8]
    [375, 40, 64, 21, -31, 0]
    [450, 40, 64, 21, -31, 0]
    [525, 40, 64, 39, -31, -8]

    [  0, 80, 64, 31, -31, 0]
    [ 75, 80, 64, 31, -31, 0]
    [150, 80, 64, 31, -31, 0]
    [225, 80, 64, 31, -31, 0]
}

/* Spritesets for test overlays */
spriteset(road_overlays_red, "gfx/roads_red.png") {
    tmpl_overlay_roadtypes()
}
spriteset(road_overlays_blue, "gfx/roads_blue.png") {
    tmpl_overlay_roadtypes()
}
spriteset(road_overlays_yellow, "gfx/roads_yellow.png") {
    tmpl_overlay_roadtypes()
}
spriteset(tram_overlays_green, "gfx/tram_green.png") {
    tmpl_overlay_roadtypes()
}

spriteset(road_overlays_base, "gfx/roads/XXXX_BASE/roads_road.png") {
    tmpl_overlay_roadtypes()
}
/* Spriteset for road overlays */
spriteset(road_overlays_road, "gfx/roads/0000_RAAN/roads_road.png") {
    tmpl_overlay_roadtypes()
}
# 1 "urs.pnml" 1
# 1 "src/template/template_depot.pnml" 1

/**********************************************
 * Depots:
 **********************************************/
/* Template for depot sprites */

template tmpl_road_depot_isr() {
	[ 10,  80, 25, 25,   8,   3]
	[ 50,  80, 67, 51,  -2, -35]
	[130,  80, 25, 25, -31,   3]
	[170,  80, 67, 51, -63, -35]
	[250,  10, 67, 51, -63, -35]
	[330,  10, 67, 51,  -2, -35]
}

template tmpl_tram_depot_isr() {
	[ 10, 150, 25, 25,   8,   3]
	[ 50,  80, 67, 51,  -2, -35]
	[130, 150, 25, 25, -31,   3]
	[170,  80, 67, 51, -63, -35]
	[250,  10, 67, 51, -63, -35]
	[330,  10, 67, 51,  -2, -35]
}

template tmpl_depot_road() {
    [200, 10, 16,  8,  17,   7+4]
    [118,  8, 64, 47,  -9+8, -31]
    [  0, 10, 16,  8, -31,   7+4]
    [ 37,  8, 64, 47, -53-8, -31]
    [ 37, 63, 64, 47, -53-8, -31]
    [118, 63, 64, 47,  -9+8, -31]
}

template tmpl_tram_depot_mono() {
	[ 10, 150, 25, 25,   5,   0]
	[ 50,  80, 64, 64,  -2, -49]
	[130, 150, 25, 25, -29,   0]
	[170,  80, 64, 64, -61, -49]
	[250,  10, 62, 64, -61, -49]
	[330,  10, 62, 64,  -1, -49]
}



/* Depots */
spriteset(depot_isr_road, "gfx/roads/XXXX_BASE/isr_depot.png") {
    tmpl_road_depot_isr()
}

/* Depots */
spriteset(depot_isr_tram, "gfx/roads/XXXX_BASE/isr_depot.png") {
    tmpl_tram_depot_isr()
}

/* Depots */
//spriteset(depot_normal_road, "gfx/roads/0000_RAAN/depot_normal.png") {
//    tmpl_depot_road()
//}
# 1 "urs.pnml" 1
# 1 "src/template/template_bridge.pnml" 1

/**********************************************
 * Bridge surfaces:
 **********************************************/
/* Bridge surface, uses the same sprites as track underlays, but in a different order */
template tmpl_bridges_underlay() {
    tmpl_underlay_straight()
    tmpl_underlay_slope()
    tmpl_underlay_junctions()
}
/* Spriteset for bridge surfaces */
spriteset(bridge_underlay_base, "gfx/roads/XXXX_BASE/roads_underlay.png") {
    tmpl_bridges_underlay()
}
/* Spriteset for bridge surfaces */
spriteset(bridge_underlay_road, "gfx/roads/0000_RAAN/roads_underlay.png") {
    tmpl_bridges_underlay()
}
# 1 "urs.pnml" 1
# 1 "src/template/template_gui.pnml" 1

/**********************************************
 * GUI sprites:
 **********************************************/

/* Template for a single icon sprite */
template tmpl_gui_icon(x, y) {
    [x, y, 20, 20, 0, 0]
}

/* Template for a single cursor sprite */
template tmpl_gui_cursor(x, y) {
    [x, y, 32, 32, 0, 0]
}
/* Template for all the GUI sprites (8 icons + 8 cursors) */
template tmpl_gui() {
    tmpl_gui_icon(  0, 0)
    tmpl_gui_icon( 25, 0)
    tmpl_gui_icon( 50, 0)
    tmpl_gui_icon( 75, 0)
    tmpl_gui_icon(100, 0)
    tmpl_gui_icon(125, 0)
    tmpl_gui_icon(150, 0)
    tmpl_gui_icon(175, 0)

    tmpl_gui_cursor(200, 0)
    tmpl_gui_cursor(250, 0)
    tmpl_gui_cursor(300, 0)
    tmpl_gui_cursor(350, 0)
    tmpl_gui_cursor(400, 0)
    tmpl_gui_cursor(450, 0)
    tmpl_gui_cursor(500, 0)
    tmpl_gui_cursor(550, 0)
}

/* Spritesets for the normal and electric GUI */
spriteset(gui_normal, "gfx/roads/XXXX_BASE/gui_rail.png") {
    tmpl_gui()
}
# 1 "urs.pnml" 1
# 1 "src/template/template_roadstop.pnml" 1

/**********************************************
 * Roadstop sprites:
 **********************************************/

template tmpl_underlay_roadstop() {
    ground_tile(  0, 120)
    ground_tile( 75, 120)
    ground_tile(150, 120)
    ground_tile(225, 120)
}

spriteset(roadstop_underlay_red, "gfx/roads_red.png") {
    tmpl_underlay_roadstop()
}
spriteset(roadstop_underlay_blue, "gfx/roads_blue.png") {
    tmpl_underlay_roadstop()
}
spriteset(roadstop_underlay_yellow, "gfx/roads_yellow.png") {
    tmpl_underlay_roadstop()
}
spriteset(roadstop_underlay_base, "gfx/roads/XXXX_BASE/roads_road.png") {
    tmpl_underlay_roadstop()
}
/* spriteset(roadstop_underlay_road, "gfx/roads/0000_RAAN/roads_raan.png") {
    tmpl_underlay_roadstop()
} */
# 1 "urs.pnml" 1
# 1 "src/template/template_catenaryfront.pnml" 1

/**********************************************
 * Catenary (Road):
 **********************************************/
/* Template for underlays; 2x straight road, 5x junctions, 4x corners, 4x slope, 4x half-tile road */
template tmpl_catenary_front_roadtypes() {
    [ 0, 0, 64, 57, -31, -26]
    [80, 0, 64, 57, -31, -26]
    [160, 0, 64, 57, -31, -26]
    [240, 0, 64, 57, -31, -26]
    [320, 0, 64, 57, -31, -26]
    [400, 0, 64, 57, -31, -26]
    [480, 0, 64, 57, -31, -26]
	
    [  0, 80, 64, 31, -31, -26]
    [ 80, 80, 64, 31, -31, -26]
    [160, 80, 64, 31, -31, -26]
    [240, 80, 64, 31, -31, -26]
    [320, 80, 64, 64, -31, -34]
    [400, 80, 64, 64, -31, -34]
    [480, 80, 64, 64, -31, -34]
    [560, 80, 64, 64, -31, -34]
    
	[  0, 160, 64, 57, -31, -26]
    [ 80, 160, 64, 57, -31, -26]
    [160, 160, 64, 57, -31, -26]
    [240, 160, 64, 57, -31, -26]
	[320, 160, 64, 48, 0, 0]
	[400, 160, 64, 48, 0, 0]
	[480, 160, 64, 48, 0, 0]
	[560, 160, 64, 48, 0, 0]
	
	[  0, 240, 64, 48, 0, 0]
	[ 80, 240, 64, 48, 0, 0]
	[160, 240, 64, 57, 0, 0]
	[240, 240, 64, 57, 0, 0]
	[320, 240, 64, 57, 0, 0]
	[400, 240, 64, 57, 0, 0]
}


/**********************************************
 * Catenary (Suspended Monorail):
 **********************************************/
/* Template for underlays; 2x straight road, 5x junctions, 4x corners, 4x slope, 4x half-tile road */
template tmpl_catenary_front_monorail() {
    [  0, 0, 70, 55, -34, -24]
    [ 80, 0, 70, 55, -34, -24]
    [160, 0, 70, 55, -34, -24]
    [240, 0, 70, 55, -34, -24]
    [320, 0, 70, 55, -34, -24]
    [400, 0, 70, 55, -34, -24]
    [480, 0, 70, 55, -34, -24]
	
    [  0, 80, 70, 55, -34, -24]
    [ 80, 80, 70, 55, -34, -24]
    [160, 80, 70, 55, -34, -24]
    [240, 80, 70, 55, -34, -24]
    [320, 80, 70, 65, -34, -33]
    [400, 80, 70, 55, -34, -24]
    [480, 80, 70, 55, -34, -24]
    [560, 80, 70, 65, -34, -33]
    
	[  0, 160, 70, 55, -33, -24]
    [ 80, 160, 70, 55, -33, -24]
    [160, 160, 70, 55, -33, -24]
    [240, 160, 70, 55, -33, -24]
	[320, 160, 70, 55, 0, 0]
	[400, 160, 70, 55, 0, 0]
	[480, 160, 70, 55, 0, 0]
	[560, 160, 70, 55, 0, 0]
	
	[  0, 240, 70, 55, 0, 0]
	[ 80, 240, 70, 55, 0, 0]
	[160, 240, 70, 60, 0, 0]
	[240, 240, 70, 55, 0, 0]
	[320, 240, 70, 60, 0, 0]
	[400, 240, 70, 55, 0, 0]
}
# 1 "urs.pnml" 1
# 1 "src/template/template_catenaryback.pnml" 1

/**********************************************
 * Catenary (Road):
 **********************************************/
/* Template for underlays; 2x straight road, 5x junctions, 4x corners, 4x slope, 4x half-tile road */
template tmpl_catenary_back_roadtypes() {
    [ 0, 0, 64, 57, -31, -26]
    [80, 0, 64, 57, -31, -26]
    [160, 0, 64, 57, -31, -26]
    [240, 0, 64, 57, -31, -26]
    [320, 0, 64, 57, -31, -26]
    [400, 0, 64, 57, -31, -26]
    [480, 0, 64, 57, -31, -26]
	
    [  0, 80, 64, 31, -31, -26]
    [ 80, 80, 64, 31, -31, -26]
    [160, 80, 64, 31, -31, -26]
    [240, 80, 64, 31, -31, -26]
    [320, 80, 64, 64, -31, -34]
    [400, 80, 64, 64, -31, -34]
    [480, 80, 64, 64, -31, -34]
    [560, 80, 64, 64, -31, -34]
    
	[  0, 160, 64, 57, -31, -26]
    [ 80, 160, 64, 57, -31, -26]
    [160, 160, 64, 57, -31, -26]
    [240, 160, 64, 57, -31, -26]
	[320, 160, 64, 48, 0, 0]
	[400, 160, 64, 48, 0, 0]
	[480, 160, 64, 48, 0, 0]
	[560, 160, 64, 48, 0, 0]
	
	[  0, 240, 64, 48, 0, 0]
	[ 80, 240, 64, 48, 0, 0]
	[160, 240, 64, 57, 0, 0]
	[240, 240, 64, 57, 0, 0]
	[320, 240, 64, 57, 0, 0]
	[400, 240, 64, 57, 0, 0]
}

/**********************************************
 * Catenary (Suspended Monorail):
 **********************************************/
/* Template for underlays; 2x straight road, 5x junctions, 4x corners, 4x slope, 4x half-tile road */
template tmpl_catenary_back_monorail() {
    [  0, 0, 70, 55, -34, -24]
    [ 80, 0, 70, 55, -34, -24]
    [160, 0, 70, 55, -34, -24]
    [240, 0, 70, 55, -34, -24]
    [320, 0, 70, 55, -34, -24]
    [400, 0, 70, 55, -34, -24]
    [480, 0, 70, 55, -34, -24]
	
    [  0, 80, 70, 55, -34, -24]
    [ 80, 80, 70, 55, -34, -24]
    [160, 80, 70, 55, -34, -24]
    [240, 80, 70, 55, -34, -24]
    [320, 80, 70, 65, -34, -33]
    [400, 80, 70, 55, -34, -24]
    [480, 80, 70, 55, -34, -24]
    [560, 80, 70, 65, -34, -33]
    
	[  0, 160, 70, 55, -34, -24]
    [ 80, 160, 70, 55, -34, -24]
    [160, 160, 70, 55, -34, -24]
    [240, 160, 70, 55, -34, -24]
	[320, 160, 70, 55, 0, 0]
	[400, 160, 70, 55, 0, 0]
	[480, 160, 70, 55, 0, 0]
	[560, 160, 70, 55, 0, 0]
	
	[  0, 240, 70, 55, 0, 0]
	[ 80, 240, 70, 55, 0, 0]
	[160, 240, 70, 60, 0, 0]
	[240, 240, 70, 55, 0, 0]
	[320, 240, 70, 60, 0, 0]
	[400, 240, 70, 55, 0, 0]
}
# 1 "urs.pnml" 1

//#include "src/roads/0000_pipe.pnml"
//#include "src/roads/0000_paan.pnml"

//#include "src/roads/0000_road.pnml"

# 1 "src/roads/1817_uaae.pnml" 1

/**********************************************
 * Spriteset definitions:
 **********************************************/

/* Spriteset for street overlays */
spriteset(road_overlays_uaae, "gfx/roads/1817_UAAE/roads_uaae.png") {
    tmpl_overlay_roadtypes()
}

/* Spriteset for bridge surfaces */
spriteset(bridge_underlay_uaae, "gfx/roads/1817_UAAE/roads_uaae.png") {
    tmpl_bridges_underlay()
}

/* Spriteset for gaslamp underlays */
spriteset(road_catenary_back_uaae, "gfx/roads/1817_UAAE/catenary_back.png") {
    tmpl_catenary_back_roadtypes()
}

/* Spriteset for gaslamp overlays */
spriteset(road_catenary_front_uaae, "gfx/roads/1817_UAAE/catenary_front.png") {
    tmpl_catenary_front_roadtypes()
}

/* Depots */
spriteset(depot_uaae_road, "gfx/roads/1817_UAAE/depot_uaae.png") {
    tmpl_depot_road()
}

/* Roadstop */
spriteset(roadstop_underlay_uaae, "gfx/roads/1817_UAAE/roads_uaae.png") {
    tmpl_underlay_roadstop()
}

/* Underlay */
	spriteset(road_underlays_uaae, "gfx/roads/1817_UAAE/roads_underlay.png") {
    tmpl_underlay_roadtypes()
}

/**********************************************
 * Roadtype definitions:
 **********************************************/

/* Note that roadtypes only show in OpenTTD if compatible vehicles are available.
   examples/road_vehicle provides some vehicles for these roadtypes */

item(FEAT_ROADTYPES, uaae_util, 1) {
    property {
        name: string(STR_NAME_UAAE_ROAD);
        label: "UAAE";
		introduction_date: date(1817,2,7);
        powered_roadtype_list: ["UBBE", "PAAN", "PBBN", "PIPE", "CEAE", "TELE", "WIRE", "OAAN", "OBAN"];
		 
        toolbar_caption: string(STR_TOOLBAR_CAPTION_UAAE_ROAD);
        menu_text: string(STR_MENU_TEXT_UAAE_ROAD);
        build_window_caption: string(STR_BUILD_WINDOW_CAPTION_UAAE_ROAD);
        autoreplace_text: string(STR_AUTOREPLACE_TEXT_UAAE_ROAD);
        new_engine_text: string(STR_NEW_ENGINE_TEXT_UAAE_ROAD);
        roadtype_flags: bitmask(ROADTYPE_FLAG_CATENARY, ROADTYPE_FLAG_NO_LEVEL_CROSSING);
		construction_cost: 12;
		speed_limit: 50 km/h;
		maintenance_cost: 1;
        sort_order: 97;
    }

    /* Associate graphics with this roadtype */
    graphics {
        track_overlay: road_overlays_uaae;
        underlay: road_underlays_uaae;
        depots: depot_uaae_road;
        bridge_surfaces: bridge_underlay_uaae;
        roadstops: roadstop_underlay_uaae;
		//gui: gui_normal;
        catenary_front: road_catenary_front_uaae;
		catenary_back: road_catenary_back_uaae;
    }
}
# 1 "urs.pnml" 1

//#include "src/roads/1843_tele.pnml"
# 1 "src/roads/1843_ceae.pnml" 1

/**********************************************
 * Spriteset definitions:
 **********************************************/

/* Spriteset for street overlays */
spriteset(road_overlays_ceae, "gfx/roads/1843_CEAE/roads_ceae.png") {
    tmpl_overlay_roadtypes()
}

/* Spriteset for bridge surfaces */
spriteset(bridge_underlay_ceae, "gfx/roads/1843_CEAE/roads_ceae.png") {
    tmpl_bridges_underlay()
}

/* Spriteset for utility pole underlays */
spriteset(road_catenary_back_ceae, "gfx/roads/1843_CEAE/catenary_back.png") {
    tmpl_catenary_back_roadtypes()
}

/* Spriteset for utility pole overlays */
spriteset(road_catenary_front_ceae, "gfx/roads/1843_CEAE/catenary_front.png") {
    tmpl_catenary_front_roadtypes()
}

/* Depots */
spriteset(depot_ceae_road, "gfx/roads/1843_CEAE/depot_ceae.png") {
    tmpl_road_depot_isr()
}

/* Roadstop */
spriteset(roadstop_underlay_ceae, "gfx/roads/1843_CEAE/roads_ceae.png") {
    tmpl_underlay_roadstop()
}

/* Underlay */
	spriteset(road_underlays_ceae, "gfx/roads/1843_CEAE/roads_underlay.png") {
    tmpl_underlay_roadtypes()
}

/**********************************************
 * Roadtype definitions:
 **********************************************/

/* Note that roadtypes only show in OpenTTD if compatible vehicles are available.
   examples/road_vehicle provides some vehicles for these roadtypes */

item(FEAT_ROADTYPES, ceae_util, 3) {
    property {
        name: string(STR_NAME_CEAE_ROAD);
        label: "CEAE";
		introduction_date: date(1878,1,1);
        powered_roadtype_list: ["CEAE", "UAAE", "TELE", "WIRE"];
        toolbar_caption: string(STR_TOOLBAR_CAPTION_CEAE_ROAD);
        menu_text: string(STR_MENU_TEXT_CEAE_ROAD);
        build_window_caption: string(STR_BUILD_WINDOW_CAPTION_CEAE_ROAD);
        autoreplace_text: string(STR_AUTOREPLACE_TEXT_CEAE_ROAD);
        new_engine_text: string(STR_NEW_ENGINE_TEXT_CEAE_ROAD);
        roadtype_flags: bitmask(ROADTYPE_FLAG_CATENARY, ROADTYPE_FLAG_NO_LEVEL_CROSSING);
		construction_cost: 1;
		//speed_limit: 8 km/h;
		maintenance_cost: 1;
        sort_order: 97;
    }

    /* Associate graphics with this roadtype */
    graphics {
        track_overlay: road_overlays_ceae;
        underlay: road_underlays_ceae;
        depots: depot_ceae_road;
        bridge_surfaces: bridge_underlay_ceae;
        roadstops: roadstop_underlay_ceae;
		//gui: gui_normal;
        catenary_front: road_catenary_front_ceae;
		catenary_back: road_catenary_back_ceae;
    }
}
# 1 "urs.pnml" 1
//#include "src/vehicles/trucks_tele.pnml"

//#include "src/tramways/1862_rail.pnml"

//#include "src/tramways/1863_mtro.pnml"
//#include "src/template/template_subway.pnml"
//#include "src/switches_subway.pnml"
//#include "src/vehicles/tram_gate_tube.pnml"
//#include "src/vehicles/tram_new_works_tube.pnml"
//#include "src/vehicles/tram_victoria_tube.pnml"
//#include "src/vehicles/tram_adtranz_tube.pnml"
//#include "src/vehicles/tram_shinku-eki.pnml"

# 1 "src/roads/1865_pbbn.pnml" 1

/**********************************************
 * Spriteset definitions:
 **********************************************/

/* Spriteset for street overlays */
spriteset(road_overlays_pbbn, "gfx/roads/1865_PBBN/roads_pbbn.png") {
    tmpl_overlay_roadtypes()
}

/* Spriteset for bridge surfaces */
spriteset(bridge_underlay_pbbn, "gfx/roads/1865_PBBN/roads_pbbn.png") {
    tmpl_bridges_underlay()
}

/* Spriteset for gaslamp underlays */
spriteset(road_catenary_back_pbbn, "gfx/roads/1865_PBBN/catenary_back.png") {
    tmpl_catenary_back_roadtypes()
}

/* Spriteset for gaslamp overlays */
spriteset(road_catenary_front_pbbn, "gfx/roads/1865_PBBN/catenary_front.png") {
    tmpl_catenary_front_roadtypes()
}

/* Depots */
spriteset(depot_pbbn_road, "gfx/roads/1865_PBBN/depot_pbbn.png") {
    tmpl_road_depot_isr()
}

/* Roadstop */
spriteset(roadstop_underlay_pbbn, "gfx/roads/1865_PBBN/roads_pbbn.png") {
    tmpl_underlay_roadstop()
}

/* Underlay */
	spriteset(road_underlays_pbbn, "gfx/roads/1865_PBBN/roads_underlay.png") {
    tmpl_underlay_roadtypes()
}

/**********************************************
 * Roadtype definitions:
 **********************************************/

/* Note that roadtypes only show in OpenTTD if compatible vehicles are available.
   examples/road_vehicle provides some vehicles for these roadtypes */

item(FEAT_ROADTYPES, pbbn_road, 2) {
    property {
        name: string(STR_NAME_PBBN_ROAD);
        label: "PBBN";
		introduction_date: date(1865,1,1);
        powered_roadtype_list: ["PIPE", "UAAE", "CEAE"];
        toolbar_caption: string(STR_TOOLBAR_CAPTION_PBBN_ROAD);
        menu_text: string(STR_MENU_TEXT_PBBN_ROAD);
        build_window_caption: string(STR_BUILD_WINDOW_CAPTION_PBBN_ROAD);
        autoreplace_text: string(STR_AUTOREPLACE_TEXT_PBBN_ROAD);
        new_engine_text: string(STR_NEW_ENGINE_TEXT_PBBN_ROAD);
        roadtype_flags: bitmask(ROADTYPE_FLAG_TOWN_BUILD, ROADTYPE_FLAG_NO_LEVEL_CROSSING);
		construction_cost: 180;
		speed_limit: 8 km/h;
		maintenance_cost: 2;
        sort_order: 97;
    }

    /* Associate graphics with this roadtype */
    graphics {
        track_overlay: road_overlays_pbbn;
        underlay: road_underlays_pbbn;
        depots: depot_pbbn_road;
        bridge_surfaces: bridge_underlay_pbbn;
        roadstops: roadstop_underlay_pbbn;
		//gui: gui_normal;
        /* Catenary is not not implemented here, use the default */
    }
}
# 1 "urs.pnml" 1

//#include "src/roads/1878_wire.pnml"
//#include "src/vehicles/trucks_wire.pnml"

# 1 "src/roads/1900_ubbe.pnml" 1

/**********************************************
 * Spriteset definitions:
 **********************************************/

/* Spriteset for street overlays */
spriteset(road_overlays_ubbe, "gfx/roads/1900_UBBE/roads_ubbe.png") {
    tmpl_overlay_roadtypes()
}

/* Spriteset for bridge surfaces */
spriteset(bridge_underlay_ubbe, "gfx/roads/1900_UBBE/roads_ubbe.png") {
    tmpl_bridges_underlay()
}

/* Spriteset for utility pole underlays */
spriteset(road_catenary_back_ubbe, "gfx/roads/1900_UBBE/catenary_back.png") {
    tmpl_catenary_back_roadtypes()
}

/* Spriteset for utility pole overlays */
spriteset(road_catenary_front_ubbe, "gfx/roads/1900_UBBE/catenary_front.png") {
    tmpl_catenary_front_roadtypes()
}

/* Depots */
spriteset(depot_ubbe_road, "gfx/roads/1900_UBBE/depot_ubbe.png") {
    tmpl_road_depot_isr()
}

/* Roadstop */
spriteset(roadstop_underlay_ubbe, "gfx/roads/1900_UBBE/roads_ubbe.png") {
    tmpl_underlay_roadstop()
}

/* Underlay */
	spriteset(road_underlays_ubbe, "gfx/roads/1900_UBBE/roads_underlay.png") {
    tmpl_underlay_roadtypes()
}

/**********************************************
 * Roadtype definitions:
 **********************************************/

/* Note that roadtypes only show in OpenTTD if compatible vehicles are available.
   examples/road_vehicle provides some vehicles for these roadtypes */

item(FEAT_ROADTYPES, ubbe_util, 4) {
    property {
        name: string(STR_NAME_UBBE_ROAD);
        label: "UBBE";
		introduction_date: date(1878,1,1);
        powered_roadtype_list: ["UAAE", "PBBN", "CEAE"];
        toolbar_caption: string(STR_TOOLBAR_CAPTION_UBBE_ROAD);
        menu_text: string(STR_MENU_TEXT_UBBE_ROAD);
        build_window_caption: string(STR_BUILD_WINDOW_CAPTION_UBBE_ROAD);
        autoreplace_text: string(STR_AUTOREPLACE_TEXT_UBBE_ROAD);
        new_engine_text: string(STR_NEW_ENGINE_TEXT_UBBE_ROAD);
        roadtype_flags: bitmask(ROADTYPE_FLAG_CATENARY, ROADTYPE_FLAG_NO_LEVEL_CROSSING);
		construction_cost: 181;
		//speed_limit: 8 km/h;
		maintenance_cost: 2;
        sort_order: 97;
    }

    /* Associate graphics with this roadtype */
    graphics {
        track_overlay: road_overlays_ubbe;
        underlay: road_underlays_ubbe;
        depots: depot_ubbe_road;
        bridge_surfaces: bridge_underlay_ubbe;
        roadstops: roadstop_underlay_ubbe;
		//gui: gui_normal;
        catenary_front: road_catenary_front_ubbe;
		catenary_back: road_catenary_back_ubbe;
    }
}
# 1 "urs.pnml" 1
//#include "src/tramways/1900_mono.pnml"
